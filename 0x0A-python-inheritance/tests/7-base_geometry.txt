the ``7-base_geometry`` module
==============================

using ``integer_validator``
----------------------------------------
usage:
	object.integer_validator(name, value)
	where object is the list object in question
	name is always a string and
	value is to be validated

this is an example text file, first import module and setup test list object

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> testbg = BaseGeometry()

Now use it to test various conditions:
test with negative value

	>>> testbg.integer_validator("int1", -1)
	Traceback (most recent call last):
	ValueError: int1 must be greater than 0

test with zero value

	>>> testbg.integer_validator("int1", 0)
	Traceback (most recent call last):
	ValueError: int1 must be greater than 0

test with string

	>>> testbg.integer_validator("int1", "oh no")
	Traceback (most recent call last):
	TypeError: int1 must be an integer

test with float

	>>> testbg.integer_validator("int1", 1.01)
	Traceback (most recent call last):
	TypeError: int1 must be an integer

test with bool

	>>> testbg.integer_validator("int1", True)
	Traceback (most recent call last):
	TypeError: int1 must be an integer

